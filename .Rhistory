fileList<-content(GET(url=listURL,body=login),
"parsed",
type="application/json")
fileURL=paste0("http://pems.dot.ca.gov/",
fileList$data[[as.numeric(mm)]][[as.numeric(dd)]]$url)
#download the file
fileName=paste0(getwd(),"/",dir,dataType,"_","d",
disId,"_",
mm,"-",
dd,"-",
yy,
".txt.gz")
to.write=file(fileName,"wb")
message(paste("Downloadig",fileName))
downloaded<-GET(url=fileURL)
#write the file to disk
writeBin(content(downloaded, "raw"), to.write)
close(to.write)
message("Success")
}
}
download_pems(user_name="jaredsun26",password="063705",dates=temp)
download_pems(userName="jaredsun26",password="063705",dates=temp)
download_pems<-function(dataType="station_raw", disId=12,  dates=ISOdate(2014,1,1), dir="/pemsData/", userName,password){
library(httr)
library(XML)
login <- list(
redirect="",
username = userName,
password = password,
login="Login"
)
#send authentication information
message("Sending login information...")
response<-POST("http://pems.dot.ca.gov", body=login)
if (response$status_code==200){
message("Success")
}else{
stop("Connection Failed, status code:", response$status_code)
}
#Looping over a Date object result in a numeric iterator
for (i in seq_along(dates)){
yy=strftime(dates[i],"%Y")
mm=strftime(dates[i],"%m")
dd=strftime(dates[i],"%d")
#get list of file download URL (json format)
##URL for the file lists
listURL=paste0("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=",disId,"&yy=", yy, "&type=", dataType, "&returnformat=text")
fileList<-content(GET(url=listURL,body=login),
"parsed",
type="application/json")
fileURL=paste0("http://pems.dot.ca.gov/",
fileList$data[[as.numeric(mm)]][[as.numeric(dd)]]$url)
print(fileURL)
#download the file
fileName=paste0(getwd(),"/",dir,dataType,"_","d",
disId,"_",
mm,"-",
dd,"-",
yy,
".txt.gz")
to.write=file(fileName,"wb")
message(paste("Downloadig",fileName))
downloaded<-GET(url=fileURL)
#write the file to disk
writeBin(content(downloaded, "raw"), to.write)
close(to.write)
message("Success")
}
}
download_pems(userName="jaredsun26",password="063705",dates=temp)
debugSource('C:/Users/ZHE/Desktop/pems_scraping.R', echo=TRUE)
download_pems(userName="jaredsun26",password="063705",dates=temp)
fileURL
fileList
listURL
content(GET(url=listURL,body=login),
"parsed",
type="application/json")
GET(url=listURL,body=login)
content(ET(url=listURL,body=login))
content(GET(url=listURL,body=login))
listURL
GET(url=listURL,body=login)
POST("http://pems.dot.ca.gov", body=login)
GET(url=listURL,body=login)
PSOT(url=listURL,body=login)
POST(url=listURL,body=login)
GET("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=12&yy=2015&type=station_raw&returnformat=text")
login <- list(
redirect="",
username = "jaredsun26",
password = "063705",
login="Login"
)
GET("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=12&yy=2015&type=station_raw&returnformat=text",body=login)
login
POST("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=12&yy=2015&type=station_raw&returnformat=text",body=login)
POST("http://pems.dot.ca.gov",body=login)
POST("http://pems.dot.ca.gov/?dnode=Clearinghouse",body=login)
content(POST("http://pems.dot.ca.gov/?dnode=Clearinghouse",body=login))
GET("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=12&yy=2015&type=station_raw&returnformat=text")
GET("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=12&yy=2015&type=station_raw")
GET("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=12&yy=2015&type=station_raw&returnformat=text")
library("httr", lib.loc="~/R/win-library/3.2")
?GET
GET("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=12&yy=2015&type=station_raw&returnformat=text")
library("RCurl", lib.loc="~/R/win-library/3.2")
library("XML", lib.loc="~/R/win-library/3.2")
GET("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=12&yy=2015&type=station_raw&returnformat=text")
library(httr)
library(XML)
login <- list(
redirect="",
username = userName,
password = password,
login="Login"
)
#send authentication information
message("Sending login information...")
response<-POST("http://pems.dot.ca.gov", body=login)
if (response$status_code==200){
message("Success")
}else{
stop("Connection Failed, status code:", response$status_code)
}
yy=2014
mm=1
dd=1
##URL for the file lists
listURL=paste0("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=",disId,"&yy=", yy, "&type=", dataType, "&returnformat=text")
fileList<-content(GET(url=listURL,body=login),
"parsed",
type="application/json")
disId=12
dataType="station_raw"
listURL=paste0("http://pems.dot.ca.gov/?srq=clearinghouse&district_id=",disId,"&yy=", yy, "&type=", dataType, "&returnformat=text")
fileList<-content(GET(url=listURL,body=login),
"parsed",
type="application/json")
fileURL=paste0("http://pems.dot.ca.gov/",
fileList$data[[as.numeric(mm)]][[as.numeric(dd)]]$url)
print(fileURL)
fileList<-content(GET(url=listURL,body=login),
"parsed",
type="application/json")
fileList
fileList<-content(GET(url=listURL,body=login),
"parsed",
type="application/json")
fileURL=paste0("http://pems.dot.ca.gov/",
fileList$data[[as.numeric(mm)]][[as.numeric(dd)]]$url)
fileURL
date: "Sunday, May 17, 2015"
setwd("E:/SkyDrive/Courses achive/ReproducibleDataAnalysis/RepData_PeerAssessment1")
data<-read.csv(unzip("activity.zip""))
)
)
unzip
""
data<-read.csv(unzip("activity.zip"))
data
head(data)
data<-read.csv(unzip("activity.zip"),colClasses=c("integer","Date","factor"))
data<-read.csv(unzip("activity.zip"),colClasses=c("integer","Date","factor"))
head(data)
data<-read.csv(unzip("activity.zip"),colClasses = c("integer","Date","factor"))
data
head(data)
?unzip
?complete.cases
complete.cases(data)
data<-na.omit(data)
clean<-na.omit(data)
data<-read.csv(unzip("activity.zip"),colClasses = c("integer","Date","factor"))
#remove the NA value
clean<-na.omit(data)
clean
head(clean)
library(dplyr)
library(ggplot2)
?group_by
clean%>%
group_by(clean, date)%>%
summarise(total=sum(steps)
)
clean<-na.omit(data)
clean%>%
group_by(clean, date)%>%
summarise(total=sum(steps)
)
clean%>%
group_by(date, clean)%>%
summarise(total=sum(steps)
)
clean%>%
group_by(date)%>%
summarise(total=sum(steps)
)
totalStep<-clean%>%
group_by(clean)%>%
summarise(total=sum(steps)
)
ggplot(totalStep, aes(x=steps))+geom_histogram()
totalStep<-clean%>%
group_by(date)%>%
summarise(total=sum(steps)
)
ggplot(totalStep, aes(x=steps))+geom_histogram()
totalStep<-clean%>%
group_by(date)%>%
summarise(total=sum(steps)
)
ggplot(totalStep, aes(x=total))+geom_histogram()
ggplot(totalStep, aes(x=total))
+geom_histogram()
+labs(title="Histogram of the Total Number of Steps Taken Each Day",
x="Total Number of Steps",
y="Frequency")
ggplot(totalStep, aes(x=total))+geom_histogram()+labs(title="Histogram of the Total Number of Steps Taken Each Day",
x="Total Number of Steps",
y="Frequency")
head(data)
5min<-clean%>%
group_by(interval)%>%
summarise(total=mean(steps))
clean
head(clean)
?complete
totalStep<-completeData%>%
group_by(date)%>%
summarise(total=sum(steps)
)
completeData<-na.omit(data)
totalStep<-completeData%>%
group_by(date)%>%
summarise(total=sum(steps)
)
ggplot(totalStep, aes(x=total))+geom_histogram()+labs(title="Histogram of the Total Number of Steps Taken Each Day",
x="Total Number of Steps",
y="Frequency")
completeData
head(completeData)
5min<-completeData%>%
group_by(interval)%>%
summarise(total=mean(steps))
Fivemin<-completeData%>%
group_by(interval)%>%
summarise(total=mean(steps))
library(dplyr)
library(ggplot2)
data<-read.csv(unzip("activity.zip"),colClasses = c("integer","Date","factor"))
#remove the NA value
completeData<-na.omit(data)
totalStep<-completeData%>%
group_by(date)%>%
summarise(total=sum(steps)
)
ggplot(totalStep, aes(x=total))+geom_histogram()+labs(title="Histogram of the Total Number of Steps Taken Each Day",
x="Total Number of Steps",
y="Frequency")
mean(totalStep$total)
median(totalStep$total)
fiveMin<-completeData%>%
group_by(interval)%>%
summarise(total=mean(steps))
fiveMin
interval
library(dplyr)
library(ggplot2)
data<-read.csv(unzip("activity.zip"),colClasses = c("integer","Date","integer"))
#remove the NA value
completeData<-na.omit(data)
## What is mean total number of steps taken per day?
totalStep<-completeData%>%
group_by(date)%>%
summarise(total=sum(steps)
)
ggplot(totalStep, aes(x=total))+geom_histogram()+labs(title="Histogram of the Total Number of Steps Taken Each Day",
x="Total Number of Steps",
y="Frequency")
mean(totalStep$total)
median(totalStep$total)
fiveMin<-completeData%>%
group_by(interval)%>%
summarise(total=mean(steps))
fiveMin
ggplot(fiveMin, aes=(x=interval))+geom_line()
ggplot(fiveMin, aes(x=interval))+geom_line()
fiveMin<-completeData%>%
group_by(interval)%>%
summarise(average=mean(steps))
ggplot(fiveMin, aes(x=interval,y=average))+geom_line()
fiveMin<-completeData%>%
group_by(interval)%>%
summarise(average=mean(steps))
g21<-ggplot(fiveMin, aes(x=interval,y=average))+geom_line()
g21+labs(y="Average Number of Steps", title="Average Number of Steps Taken, Averaged Across All Days")
fiveMin<-completeData%>%
group_by(interval)%>%
summarise(average=mean(steps))
g21<-ggplot(fiveMin, aes(x=interval,y=average))+geom_line()
g21+labs(x= 5-min intervals, y="Average Number of Steps", title="Average Number of Steps Taken, Averaged Across All Days")
fiveMin<-completeData%>%
group_by(interval)%>%
summarise(average=mean(steps))
g21<-ggplot(fiveMin, aes(x=interval,y=average))+geom_line()
g21+labs(x= "5-min intervals", y="Average Number of Steps", title="Average Number of Steps Taken, Averaged Across All Days")
>which
?which
which(max(fiveMin$average))
?which.max
which.max(fiveMin$average)
fiveMin$interval[which.max(fiveMin$average)]
sum(is.na(data))
?is.na
is.na(data)
?complete.cases
complete.cases(data)
-sum(complete.cases(data)-1)
is.na(data$steps)
comp<-data$interval[is.na(data$steps)]
comp
fiveMin
fiveMin
View(fiveMin)
comp<-fiveMin$average[data$interval[is.na(data$steps)]/5+1]
comp
data$interval[is.na(data$steps)]/5+1
data$interval[is.na(data$steps)]/5
data
head(data)
View(data)
fiveMin$interval==data$interval[is.na(data$steps)]
is.na(data$steps)
?is.na
?step
head(fiveMin)
imputed<-data
for (i in 1:nrow(imputed)){
if (is.na(imputed$steps[i])){
imputed$steps[i]=fiveMin[which(imputed$interval[i]==fiveMin$interval),2]
}
}
imputed
head(imputed)
totalStepImputed<-imputed%>%
group_by(date)%>%
summarise(total=sum(steps)
g12<-ggplot(totalStepImputed, aes(x=total))+geom_histogram()
g12+labs(title="Histogram of the Total Number of Steps Taken Each Day",
x="Total Number of Steps",
y="Frequency")
imputed<-data
for (i in 1:nrow(imputed)){
if (is.na(imputed$steps[i])){
imputed$steps[i]=fiveMin[which(imputed$interval[i]==fiveMin$interval),2]
}
}
totalStepImputed<-imputed%>%
group_by(date)%>%
summarise(total=sum(steps)
)
totalStepImputed<-imputed%>%
group_by(date)%>%
summarise(total=sum(steps))
imputed
head(totalStepImputed)
head(imputed)
totalStepImputed<-imputed%>%
group_by(date)%>%
summarise(total=sum(steps))
totalStep<-completeData%>%
group_by(date)%>%
summarise(total=sum(steps)
)
imputed<-data
for (i in 1:nrow(imputed)){
if (is.na(imputed$steps[i])){
imputed$steps[i]=fiveMin[which(imputed$interval[i]==fiveMin$interval),2]
}
}
imputed
class(imputed)
head(imputed)
class(imputed$steps)
class(imputed$date)
class(imputed$interval)
head(data)
class(data$steps)
imputed<-data
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
imputed$steps[i] <- fiveMin[which(imputed$interval[i] == fiveMin$interval), ]$average
}
}
class(imputed$interval)
class(imputed$steps)
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
imputed$steps[i] <- fiveMin[which(imputed$interval[i] == fiveMin$interval), 2]
}
}
class(imputed$steps)
totalStepImputed<-imputed%>%
group_by(date)%>%
summarise(total=sum(steps))
imputed<-data
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
imputed$steps[i] <- fiveMin[which(imputed$interval[i] == fiveMin$interval), 2]
}
}
totalStepImputed<-imputed%>%
group_by(date)%>%
summarise(total=sum(steps))
g33<-ggplot(totalStepImputed, aes(x=total))+geom_histogram()
g33+labs(title="Histogram of the Total Number of Steps Taken Each Day",
x="Total Number of Steps",
y="Frequency")
mean(totalStepimputed$total)
median(totalStepimputed$total)
mean(totalStepImputed$total)
median(totalStepImputed$total)
totalStepImputed
plot(otalStepImputed$total)
plot(totalStepImputed$total)
mean(totalStepImputed$total)
median(totalStepImputed$total)
imputed<-data
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
imputed$steps[i] <- fiveMin[which(imputed$interval[i] == fiveMin$interval), 2]
}
}
totalStepImputed<-imputed%>%
group_by(date)%>%
summarise(total=sum(steps))
g33<-ggplot(totalStepImputed, aes(x=total))+geom_histogram()
g33+labs(title="Histogram of the Total Number of Steps Taken Each Day",
x="Total Number of Steps",
y="Frequency")
imputed<-data
for (i in 1:nrow(imputed)) {
if (is.na(imputed$steps[i])) {
imputed$steps[i] <- fiveMin[which(imputed$interval[i] == fiveMin$interval), ]$average
}
}
oldMean<-mean(totalStep$total)
oldMedian<median(totalStep$total)
newMean<-mean(totalStepImputed$total)
newMedian(totalStepImputed$total)
oldMean<-mean(totalStep$total)
oldMedian<median(totalStep$total)
newMean<-mean(totalStepImputed$total)
newMedian<-median(totalStepImputed$total)
oldMean<-mean(totalStep$total)
oldMedian<median(totalStep$total)
newMean<-mean(totalStepImputed$total)
newMedian<-median(totalStepImputed$total)
oldMean<-mean(totalStep$total)
oldMedian<median(totalStep$total)
newMean<-mean(totalStepImputed$total)
newMedian<-median(totalStepImputed$total)
mean(totalStep$total)
median(totalStep$total)
wday(date$date)
data$date$wday
as.POSIXlt(data$date)$wday
ifelse
?ifelse
?wday
dayOfWeek<-ifelse(as.POSIXlt(data$date)$wday==0 | as.POSIXlt(data$date)$wday==1, "weekend", "weekdays")"
""
dayOfWeek<-ifelse(as.POSIXlt(data$date)$wday==0 | as.POSIXlt(data$date)$wday==1, "weekend", "weekdays")
dayOfWeek
dayOfWeek<-ifelse(as.POSIXlt(data$date)$wday==0 | as.POSIXlt(data$date)$wday==1, "weekend", "weekday")
head(dayOfWeek)
head(data)
as.POSIXlt(data$date)$wday
head(as.POSIXlt(data$date)$wday)
date$dayOfWeek<-ifelse(as.POSIXlt(data$date)$wday==0 | as.POSIXlt(data$date)$wday==6, "weekend", "weekday")
data$dayOfWeek<-ifelse(as.POSIXlt(data$date)$wday==0 | as.POSIXlt(data$date)$wday==6, "weekend", "weekday")
data
head(data)
fiveMinDay<-imputed%>%
group_by(interval,dayOfWeek)%>%
summarise(average=mean(steps))
fiveMinDay<-data%>%
group_by(interval,dayOfWeek)%>%
summarise(average=mean(steps))
g42<-ggplot(fiveMinDay, aes(x=interval,y=average))+geom_line()
g42+labs(x= "5-min intervals", y="Average Number of Steps", title="Average Number of Steps Taken, Averaged Across All Days")+facet_grid(.~dayOfWeek)
g42+labs(x= "5-min intervals", y="Average Number of Steps", title="Average Number of Steps Taken, Averaged Across All Days")
g42<-ggplot(fiveMinDay, aes(x=interval,y=average))+geom_line()
g42
fiveMinDay<-data%>%
group_by(interval,dayOfWeek)%>%
summarise(average=mean(steps))
fiveMinDay
imputed$dayOfWeek<-ifelse(as.POSIXlt(data$date)$wday==0 | as.POSIXlt(data$date)$wday==6, "weekend", "weekday")
head(data)
imputed
head(imputed)
fiveMinDay<-imputed%>%
group_by(interval,dayOfWeek)%>%
summarise(average=mean(steps))
fiveMinDay<-imputed%>%
group_by(interval,dayOfWeek)%>%
summarise(average=mean(steps))
g42<-ggplot(fiveMinDay, aes(x=interval,y=average))+geom_line()
g42+labs(x= "5-min intervals", y="Average Number of Steps", title="Average Number of Steps Taken, Averaged Across All Days")+facet_grid(.~dayOfWeek)
